 import SwiftUI

ruct LIGHTView: View {

@StateObject var LIGHTViewModel = LIGHTViewModel()

@Environment(\.presentationMode) var presentationMode: Binding<PresentationMode>

var body: some View {

VStack {

VStack {

HStack {

HStack {

ZStack [

Button(action: {},

label: {

Image("img_group_26")

frame(width: getRelativeWidth(50.0), height: getRelativeWidth(50.0), alignment: .center) background (RoundedCorners (topLeft: 25.0, topRight: 25.0, ||||| bottomleft: 25.0, bottomRight: 25.0) fill(LinearGradient(gradient: Gradient(colors: [ColorConstants .Gray7007f, ColorConstants .Gray9007f]), startPoint: .topLeading, endPoint: bottomTrailing))) padding(.all, getRelativeWidth(6.0)) padding(.vertical, getRelativeHeight(6.0)) padding(.horizontal, getRelativeWidth(6.0))
hideNavigationBar()

Frame(width: getRelativeWidth(62.0), height: getRelativeWidth(62.0), alignment: .center)

background(RoundedCorners (topLeft: 31.0, topRight: 31.0, bottomLeft: 31.0, bottomRight: 31.0)

Fill(LinearGradient(gradient: Gradient(colors: [ColorConstants Gray70002, ColorConstants Gray900]),

startPoint: topleading,

endPoint: bottomTrailing)))

shadow(color: ColorConstants.Black9003f, radius: 20, x: 10, y: 10)

Button(action: (), label: (

Image("img_profil_button")

})

frame(width: getRelativeWidth(62.0), height: getRelativeWidth(62.0),

alignment: .center) padding(.leading, getRelativeWidth(186.0))

frame(width: getRelativeWidth(310.0), height: getRelativeHeight(62.0), alignment: leading)

padding(horizontal, getRelativeWidth(40.0))

.frame(width: UIScreen.main.bounds.width-20, height: getRelativeHeight(62.0), alignment: leading)

VStack {

ZStack(alignment: .center) (

Text(StringConstants.kublLight)

Font(FontScheme.kPoppinsBold(size; getRelativeHeight(25.0)))

.fontWeight(.bold)
frame(width: getRelativeWidth(208.0), height: getRelativeHeight(4.6),

alignment: center)

background (ColorConstants.WhiteA700)

padding(top, getRelativeHeight(15.5))

padding(leading, getRelativeWidth(7.38))

Image("img minus square")

resizable()

Frame(width: getRelativeWidth(37.0), height: getRelativeHeight(31.0), alignment: .center)

scaledToFit()

clipped()

padding(-trailing, getRelativeWidth(178.0))

hideNavigationBar()

frame(width: getRelativeWidth(215.0), height: getRelativeHeight(31.0),

alignment: center)

padding(.top, getRelativeHeight(55.0))

frame(width: UIScreen.main.bounds.width, height: getRelativeHeight(618,0), alignment: .center)

HStack {

HStack {

Image("image_not_found")

resizable()

frame(width: getRelativeWidth(1.0), height: getRelativeHeight(24.0), alignment: center)

scaledToFit()

.clipped()

Text(StringConstants.kLblon)

Font(FontScheme,kInterRegular(size: getRelativeHeight(16.0)))
bottomRight: 40.0)

stroke(LinearGradient(gradient: Gradient(colors: [ColorConstants. WhiteA700, ColorConstants

.Black90000]), startPoint: topLeading, endPoint: bottom Trailing), linewidth: 1))

background (RoundedCorners (topLeft: 40.0, topRight: 40.0, bottomleft: 40.0,

constant bottomright: 40.0) Fill(ColorConstants.Gray30038))

shadow(radius: 40)

padding(.bottom, getRelativeHeight(54.0))

padding(.horizontal, getRelativeWidth(51.0))

frame(width: UIScreen.main.bounds.width, alignment: topLeading)

background (ColorConstants.BlueGray900)

padding(.top, getRelativeHeight(30.0))

padding(bottom, getRelativeHeight(10.0))

frame (width: UIScreen.main.bounds.width, height: UIScreen.main.bounds.height)

background (ColorConstants.BlueGray900)

ignoresSafeArea()

hideNavigationBar()

ruct LIGHTView Previews: PreviewProvider {

static var previews: some View
}}
LIGHTView()

}
}
